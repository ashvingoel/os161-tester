Index: include/unistd.h
===================================================================
--- include/unistd.h	(revision 1352)
+++ include/unistd.h	(working copy)
@@ -123,6 +123,9 @@
 /* stat - see sys/stat.h */
 /* lstat - see sys/stat.h */
 
+int printchar(char a);
+int readchar(void);
+
 /*
  * These are not themselves system calls, but wrapper routines in libc.
  */
Index: lib/libc/getchar.c
===================================================================
--- lib/libc/getchar.c	(revision 1352)
+++ lib/libc/getchar.c	(working copy)
@@ -12,7 +12,11 @@
 	char ch;
 	int len;
 
+#if 0
 	len = read(STDIN_FILENO, &ch, 1);
+#else /* 0 */
+        ch = len = readchar();
+#endif /* 0 */
 	if (len<=0) {
 		/* end of file or error */
 		return EOF;
Index: lib/libc/err.c
===================================================================
--- lib/libc/err.c	(revision 1352)
+++ lib/libc/err.c	(working copy)
@@ -22,8 +22,14 @@
 __senderr(void *junk, const char *data, size_t len)
 {
 	(void)junk;  /* not needed or used */
-
+#if 0
 	write(STDERR_FILENO, data, len);
+#else /* 0 */
+        unsigned int i = 0;
+        for (i = 0; i < len; i++) {
+                printchar(data[i]);
+        }
+#endif /* 0 */
 }
 
 /*
Index: lib/libc/putchar.c
===================================================================
--- lib/libc/putchar.c	(revision 1352)
+++ lib/libc/putchar.c	(working copy)
@@ -13,7 +13,11 @@
 {
 	char c = ch;
 	int len;
+#if 0
 	len = write(STDOUT_FILENO, &c, 1);
+#else /* 0 */
+	len = printchar(c);
+#endif /* 0 */
 	if (len<=0) {
 		return EOF;
 	}

